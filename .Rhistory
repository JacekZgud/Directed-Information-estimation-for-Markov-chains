values=rep(0,n)
values[c(1,2)] = data_valid[c(1,2),2]
for (i in c(3:n)) {
values[i] = data_valid[i-1,2] + model$coef*(data_valid[i-1,2]-data_valid[i-2,2])
}
fit = cbind(data_valid[,1],values)
fit
plot(values)
lines(data_valid[,2],col="red")
plot(fit)
scatterplot(fit)
plot(fit[,2])
lines(data_valid[,2],col="red")
#error
sum((data_valid[,2]-values)^2)
summary(model)
model=arima(data_learn[,2],order=c(1,1,0))
# one step ahead forecasting in a year we used to test our data (2013-05 to 2014-05)
n=nrow(data_valid)
values=rep(0,n)
values[c(1,2)] = data_valid[c(1,2),2]
for (i in c(3:n)) {
values[i] = data_valid[i-1,2] + model$coef*(data_valid[i-1,2]-data_valid[i-2,2])
}
fit = cbind(data_valid[,1],values)
plot(fit[,2])
lines(data_valid[,2],col="red")
#error
sum((data_valid[,2]-values)^2)
plot(data[,2])
arma = arima(zt,order=c(3,0,0))
arma$coef
mod3b = dlmModARMA(ar=arma$coef[1:3])
ztfilt2= dlmFilter(mod3b)
mod3b = dlmModARMA(ar=arma$coef[1:3])
ztfilt2= dlmFilter(mod3b)
ztfilt2= dlmFilter(zt,mod3b)
Rt2 <- with(ztflt2, dlmSvd2var(U.R, D.R))
Rt2 <- with(ztfilt2, dlmSvd2var(U.R, D.R))
diag(Rt2[[754]])
tester2 = tester*(ztfilt2$m[-c(1,751,750,749),])
test2 = tester2[,1]+tester2[,2]+tester2[,3]
tester = matrix(c(x1[1:751],x2[1:751],x3[1:751]),ncol=3)
tester2 = tester*(ztfilt2$m[-c(1,751,750,749),])
tester = tester*(ztflt$m[-c(1,751,750,749),])
test = tester[,1]+tester[,2]+tester[,3]
test2 = tester2[,1]+tester2[,2]+tester2[,3]
autoplot(as.ts(cbind(tes2t,x0[c(1:751),])))
autoplot(as.ts(cbind(test2,x0[c(1:751),])))
autoplot(as.ts(cbind(test2[-1],x0[c(2:751),])))
autoplot(as.ts(cbind(test,x0[c(1:751),])))
tester = tester[c(3,2,1)]*(ztflt$m[-c(1,751,750,749),])
test = tester[,1]+tester[,2]+tester[,3]
autoplot(as.ts(cbind(test,x0[c(1:751),])))
tester = tester[c(1,2,3)]*(ztflt$m[-c(1,751,750,749),])
test = tester[,1]+tester[,2]+tester[,3]
autoplot(as.ts(cbind(test,x0[c(1:751),])))
tester = matrix(c(x1[1:751],x2[1:751],x3[1:751]),ncol=3)
tester = tester[c(1,2,3)]*(ztflt$m[-c(1,751,750,749),])
test = tester[,1]+tester[,2]+tester[,3]
autoplot(as.ts(cbind(test,x0[c(1:751),])))
x0=data.frame(zt)
x1=zt[-1]
x2=x1[-1]
x3=x2[-1]
mod3=dlmModReg(matrix(c(x1[1:751],x2[1:751],x3[1:751]),ncol=3),addInt = FALSE,C0=20*diag(1,3,3))
mod3b = dlmModARMA(ar=arma$coef[1:3])
ztflt =dlmFilter(zt,mod3)
Rt <- with(ztflt, dlmSvd2var(U.R, D.R))
diag(Rt[[754]])
www3<-"https://www.mimuw.edu.pl/~noble/courses/TimeSeries/data/m-ppiaco4709.txt"
PPI<-read.table(www3,header=F)
colnames(PPI) = c('Year','Month','Day','ppi')
zt = diff(log(PPI$ppi))
zt=zt-mean(zt)
arma = arima(zt,order=c(3,0,0))
x0=data.frame(zt)
x1=zt[-1]
x2=x1[-1]
x3=x2[-1]
mod3=dlmModReg(matrix(c(x1[1:751],x2[1:751],x3[1:751]),ncol=3),addInt = FALSE,C0=20*diag(1,3,3))
ztflt =dlmFilter(zt,mod3)
Rt <- with(ztflt, dlmSvd2var(U.R, D.R))
diag(Rt[[754]])
tester = matrix(c(x1[1:751],x2[1:751],x3[1:751]),ncol=3)
tester = tester[c(1,2,3)]*(ztflt$m[-c(1,751,750,749),])
test = tester[,1]+tester[,2]+tester[,3]
autoplot(as.ts(cbind(test,x0[c(1:751),])))
diag(Rt[[754]])
tester = tester*(ztflt$m[-c(1,751,750,749),])
tester = matrix(c(x1[1:751],x2[1:751],x3[1:751]),ncol=3)
tester = tester*(ztflt$m[-c(1,751,750,749),])
test = tester[,1]+tester[,2]+tester[,3]
autoplot(as.ts(cbind(test,x0[c(1:751),])))
spfilt$m
autoplot(as.ts(drop(spSMT$s)), facets = FALSE)
Ct
mod2= dlmModReg(SP500$sp500,C0 = c(0.005,0.75) * diag(nrow = 2))
spfilt = dlmFilter(SP500$Pfizer,mod2)
as.ts(spfilt$m)%>%autoplot()
tester = cbind(1,SP500$sp500)
tester = tester*(spfilt$m[-1,])
test = tester[,1]+tester[,2]
autoplot(as.ts(cbind(test,SP500$Pfizer)), facets=FALSE)
Ct <- with(spfilt, dlmSvd2var(U.C, D.C))
Ct[[169]]
diag(Rt[[754]])
x0=data.frame(zt)
x1=zt[-1]
x2=x1[-1]
x3=x2[-1]
mod3=dlmModReg(matrix(c(x1[1:751],x2[1:751],x3[1:751]),ncol=3),addInt = FALSE,C0=20*diag(1,3,3))
ztflt =dlmFilter(zt,mod3)
Ct <- with(ztflt, dlmSvd2var(U.C, D.C))
diag(Ct[[754]])
diag(Rt[[754]])
Rt <- with(ztflt, dlmSvd2var(U.R, D.R))
Ct <- with(ztflt, dlmSvd2var(U.C, D.C))
diag(Ct[[754]])
diag(Rt[[754]])
autoplot(as.ts(cbind(test,x0[c(1:751),])))
mod3=dlmModReg(matrix(c(x1[1:751],x2[1:751],x3[1:751]),ncol=3),addInt = FALSE,C0=20*diag(1,3,3))
ztflt =dlmFilter(zt,mod3)
Rt <- with(ztflt, dlmSvd2var(U.R, D.R))
Ct <- with(ztflt, dlmSvd2var(U.C, D.C))
diag(Ct[[754]])
diag(Rt[[754]])
tester = matrix(c(x1[1:751],x2[1:751],x3[1:751]),ncol=3)
tester = tester*(ztflt$m[-c(1,751,750,749),])
test = tester[,1]+tester[,2]+tester[,3]
autoplot(as.ts(cbind(test,x0[c(1:751),])))
autoplot(as.ts(test-x0[c(1:751),]))
autoplot(as.ts(test)
autoplot(as.ts(test))
autoplot(as.ts(test))
autoplot(as.ts(drop(spSMT$s)), facets = FALSE)
mod3s = dlmModPoly(1)
smth=dlmSmooth(test,mod3s)
autoplot(as.ts(smth$s))
autoplot(as.ts(test-x0[c(1:751),]))
autoplot(as.ts(smth$s))
ztflt
ztflt$m
autoplot(as.ts(ztflt$m))
Ct <-unlist( with(voltFilt, dlmSvd2var(U.C, D.C))) #variance of sigma 0.6180340
www<-"https://www.mimuw.edu.pl/~noble/courses/TimeSeries/data/aa-rv-20m.txt"
volt<-read.table(www,header=F)
volt<-log(volt)
www<-"https://www.mimuw.edu.pl/~noble/courses/TimeSeries/data/aa-rv-20m.txt"
volt<-read.table(www,header=F)
volt<-log(volt)
As usual, lets start with downloading the data. It was also said to take a logarithm of our series, so we do it now.
## Point 2
```{r trend}
mod=dlmModPoly(1,C0=0.6180340)
voltFilt = dlmFilter(volt,mod)
Ct <-unlist( with(voltFilt, dlmSvd2var(U.C, D.C))) #variance of sigma 0.6180340
Ct
voltSMT = dlmSmooth(voltFilt)
volt$smooth = voltSMT$s[-341]
St <-unlist(  with(voltSMT, dlmSvd2var(U.S, D.S)) )
St
#smoothed variance - 0.4472136
Rt <- unlist(with(voltFilt, dlmSvd2var(U.R, D.R))) # variance of nabla - 1.618034
Rt
Rt <- with(ztflt, dlmSvd2var(U.R, D.R))
Ct <- with(ztflt, dlmSvd2var(U.C, D.C))
Ct
diag(Ct[[754]])
diag(Rt[[754]])
Rt[[754]]
Ct[[754]]
Ct <-unlist( with(voltFilt, dlmSvd2var(U.C, D.C))) #variance of sigma 0.6180340
Ct
with(voltFilt, dlmSvd2var(U.C, D.C))
with(voltFilt, dlmSvd2var(U.R, D.R))
#smoothed variance - 0.4472136
Rt <- unlist(with(voltFilt, dlmSvd2var(U.R, D.R))) # variance of nabla - 1.618034
Ct <- with(spfilt, dlmSvd2var(U.C, D.C))
Rt <- with(spfilt, dlmSvd2var(U.R, D.R))
Ct[[169]]
Rt[[169]]
Rt
Rt[[168]]
Ct[[169]]
smth$f
smth=dlmSmooth(ztflt$f,mod3s)
autoplot(as.ts(smth$s))
smth=dlmSmooth(test,mod3s)
autoplot(as.ts(smth$s))
V(voltFilt)
Ct <- with(spfilt, dlmSvd2var(U.C, D.C))
Ct
Ct[[169]]
Rt <- with(spfilt, dlmSvd2var(U.R, D.R))
Ct[[169]]
Rt[[[168]]]
Rt[[168]]
summary(spfilt)
summary(spfilt$mod)
summary(spfilt)
summary(spfilt$mod)
spfilt$mod$s
spfilt$mod$V
St <-unlist(  with(voltSMT, dlmSvd2var(U.S, D.S)) )
St
voltFilt = dlmFilter(volt,mod,V=0.3632)
Ct <-unlist( with(voltFilt, dlmSvd2var(U.C, D.C))) #variance of \sigma_nabla 0.6180340
mod=dlmModPoly(1,C0=0.6180340,V=0.3632)
mod=dlmModPoly(1,C0=0.6180340,dV=0.3632)
voltFilt = dlmFilter(volt,mod)
Ct <-unlist( with(voltFilt, dlmSvd2var(U.C, D.C))) #variance of \sigma_nabla 0.6180340
Ct
Rt
#smoothed variance - 0.4472136
Rt <- unlist(with(voltFilt, dlmSvd2var(U.R, D.R))) # variance of \sigma_e  1.618034
Rt
Ct
Rt
Ct
Rt
mod=dlmModPoly(1,C0=0.6180340,dV=0.3632)
voltFilt = dlmFilter(volt,mod)
Ct <-unlist( with(voltFilt, dlmSvd2var(U.C, D.C))) #variance of \sigma_nabla 0.6180340
Ct
#smoothed variance - 0.4472136
Rt <- unlist(with(voltFilt, dlmSvd2var(U.R, D.R))) # variance of \sigma_e  1.618034
Rt
Ct <-unlist( with(voltFilt, dlmSvd2var(U.C, D.C))) #variance of \sigma_nabla 0.6180340
Ct
mod=dlmModPoly(1,C0=0.6180340)
voltFilt = dlmFilter(volt,mod)
Ct <-unlist( with(voltFilt, dlmSvd2var(U.C, D.C))) #variance of \sigma_nabla 0.6180340
voltSMT = dlmSmooth(voltFilt)
mod=dlmModPoly(1,C0=0.6180340,dV=0.3632)
mod=dlmModPoly(1,C0=0.6180340,V=0.3632)
mod=dlmModPoly(1,C0=0.6180340,dV=0.3632)
voltFilt = dlmFilter(volt,mod)
Ct <-unlist( with(voltFilt, dlmSvd2var(U.C, D.C))) #variance of nabla 0.6180340
Ct
mod=dlmModPoly(1,C0=0.2830709,dV=0.3632)
#smoothed variance - 0.4472136
Rt <- unlist(with(voltFilt, dlmSvd2var(U.R, D.R)))
Rt
Rt <- unlist(with(voltFilt, dlmSvd2var(U.R, D.R))) #variance of nabla 0.6180340
level <- dropFirst(voltFilt$m)
sdC <- abs(dropFirst(voltFilt$D.C))
ci <- drop(sdC%o% qnorm(c(0.025,0.975))) + as.vector(level)
ci2 <- ts(ci)
volt$filt = voltFilt$m[-1]
www<-"https://www.mimuw.edu.pl/~noble/courses/TimeSeries/data/aa-rv-20m.txt"
volt<-read.table(www,header=F)
volt<-read.table(www,header=F)
volt<-log(volt)
mod=dlmModPoly(1,C0=0.2830709,dV=0.3632) # variance of \sigma_e  0.3632
voltFilt = dlmFilter(volt,mod)
Ct <-unlist( with(voltFilt, dlmSvd2var(U.C, D.C)))
voltSMT = dlmSmooth(voltFilt)
volt$smooth = voltSMT$s[-341]
St <-unlist(  with(voltSMT, dlmSvd2var(U.S, D.S)) )
Rt <- unlist(with(voltFilt, dlmSvd2var(U.R, D.R))) #variance of nabla 0.6180340
level <- dropFirst(voltFilt$m)
sdC <- abs(dropFirst(voltFilt$D.C))
ci <- drop(sdC%o% qnorm(c(0.025,0.975))) + as.vector(level)
ci2 <- ts(ci)
volt$filt = voltFilt$m[-1]
colnames(volt)[1] = c("volatility")
volt2s = as.ts(volt)
plot(volt$volatility, type='n',ylim = c(-3,5))
autoplot(volt2s)
plot(volt$volatility, type='n',ylim = c(-3,5))
lines(volt$filt,col="red")
plot(volt$volatility, type='n',ylim = c(-3,5))
lines(volt$filt,col="red")
lines(volt$smooth,col='blue')
polygon(c(time(volt2s),rev(time(volt2s))), c(ci[,1],rev(ci[,2])),
col=rgb(0,0,0.6,0.2), border=FALSE)
plot(volt$volatility, type='n',ylim = c(-3,5))
lines(volt$filt,col="red")
lines(volt$smooth[-1],col='blue')
polygon(c(time(volt2s),rev(time(volt2s))), c(ci[,1],rev(ci[,2])),
col=rgb(0,0,0.6,0.2), border=FALSE)
mod=dlmModPoly(1,C0=0.2830709,dV=1) # variance of \sigma_e  0.3632
voltFilt = dlmFilter(volt,mod)
Ct <-unlist( with(voltFilt, dlmSvd2var(U.C, D.C)))
voltSMT = dlmSmooth(voltFilt)
volt$smooth = voltSMT$s[-341]
St <-unlist(  with(voltSMT, dlmSvd2var(U.S, D.S)) )
Rt <- unlist(with(voltFilt, dlmSvd2var(U.R, D.R))) #variance of nabla 0.6180340
level <- dropFirst(voltFilt$m)
sdC <- abs(dropFirst(voltFilt$D.C))
ci <- drop(sdC%o% qnorm(c(0.025,0.975))) + as.vector(level)
ci2 <- ts(ci)
volt$filt = voltFilt$m[-1]
www<-"https://www.mimuw.edu.pl/~noble/courses/TimeSeries/data/aa-rv-20m.txt"
volt<-read.table(www,header=F)
volt<-log(volt)
mod=dlmModPoly(1,C0=0.2830709,dV=1) # variance of \sigma_e  0.3632
voltFilt = dlmFilter(volt,mod)
Ct <-unlist( with(voltFilt, dlmSvd2var(U.C, D.C)))
voltSMT = dlmSmooth(voltFilt)
volt$smooth = voltSMT$s[-341]
St <-unlist(  with(voltSMT, dlmSvd2var(U.S, D.S)) )
Rt <- unlist(with(voltFilt, dlmSvd2var(U.R, D.R))) #variance of nabla 0.6180340
level <- dropFirst(voltFilt$m)
sdC <- abs(dropFirst(voltFilt$D.C))
ci <- drop(sdC%o% qnorm(c(0.025,0.975))) + as.vector(level)
ci2 <- ts(ci)
volt$filt = voltFilt$m[-1]
colnames(volt)[1] = c("volatility")
volt2s = as.ts(volt)
autoplot(volt2s)
plot(volt$volatility, type='n',ylim = c(-3,5))
lines(volt$filt,col="red")
lines(volt$smooth[-1],col='blue')
polygon(c(time(volt2s),rev(time(volt2s))), c(ci[,1],rev(ci[,2])),
col=rgb(0,0,0.6,0.2), border=FALSE)
plot(volt$volatility, type='n',ylim = c(-3,5))
lines(volt$filt,col="red")
lines(volt$smooth[-1],col='blue')
polygon(c(time(volt2s[-1]),rev(time(volt2s))), c(ci[,1],rev(ci[,2])),
col=rgb(0,0,0.6,0.2), border=FALSE)
plot(volt$volatility, type='n',ylim = c(-3,5))
lines(volt$filt,col="red")
lines(volt$smooth[-1],col='blue')
polygon(c(time(volt2s),rev(time(volt2s))), c(ci[,1],rev(ci[,2])),
col=rgb(0,0,0.6,0.2), border=FALSE)
c(time(volt2s),rev(time(volt2s)))
ci[,1]
plot(volt$volatility, type='n',ylim = c(-3,5))
lines(c(1,volt$filt),col="red")
lines(volt$smooth[-1],col='blue')
polygon(c(time(volt2s[-1]),rev(time(volt2s))), c(ci[,1],rev(ci[,2])),
col=rgb(0,0,0.6,0.2), border=FALSE)
plot(volt$volatility, type='n',ylim = c(-3,5))
lines(c(1,volt$filt),col="red")
lines(volt$smooth[-1],col='blue')
polygon(c(time(volt2s),rev(time(volt2s))), c(ci[,1],rev(ci[,2])),
col=rgb(0,0,0.6,0.2), border=FALSE)
plot(volt$volatility, type='n',ylim = c(-3,5))
lines(c(1,volt$filt),col="red")
lines(volt$smooth,col='blue')
polygon(c(time(volt2s),rev(time(volt2s))), c(ci[,1],rev(ci[,2])),
col=rgb(0,0,0.6,0.2), border=FALSE)
volt$smooth
Ct
mod=dlmModPoly(1,C0=0.6180340,dV=1) # variance of \sigma_e 1
voltFilt = dlmFilter(volt,mod)
Ct <-unlist( with(voltFilt, dlmSvd2var(U.C, D.C))) #variance of nabla 0.6180340
voltSMT = dlmSmooth(voltFilt)
volt$smooth = voltSMT$s[-341]
volt$smooth = voltSMT$s[-341]
voltSMT$s
voltSMT = dlmSmooth(voltFilt)
volt$smooth = voltSMT$s[-341]
residuals(voltFilt)
residuals(voltFilt)
residuals(voltFilt)$sd
volt<-read.table(www,header=F)
www<-"https://www.mimuw.edu.pl/~noble/courses/TimeSeries/data/aa-rv-20m.txt"
volt<-read.table(www,header=F)
volt<-log(volt)
mod=dlmModPoly(1,C0=0.6180340,dV=1)
voltFilt = dlmFilter(volt,mod)
Ct <-unlist( with(voltFilt, dlmSvd2var(U.C, D.C))) #variance of nabla 0.6180340
voltSMT = dlmSmooth(voltFilt)
volt$smooth = voltSMT$s[-341]
St <-unlist(  with(voltSMT, dlmSvd2var(U.S, D.S)) )
residuals(voltFilt)$sd[] # variance of \sigma_e 1.618034
level <- dropFirst(voltFilt$m)
sdC <- abs(dropFirst(voltFilt$D.C))
ci <- drop(sdC%o% qnorm(c(0.025,0.975))) + as.vector(level)
residuals(spfilt)$sd[300]
residuals(spfilt)$sd
residuals(spfilt)$sd[150]
Ct[[169]]
Ct <- with(spfilt, dlmSvd2var(U.C, D.C))
Ct[[169]]
diag(Ct[[169]])
summary(arma)
mod3=dlmModReg(matrix(c(x1[1:751],x2[1:751],x3[1:751]),ncol=3),addInt = FALSE,C0=20*diag(1,3,3),dV=6.123e-05)
ztflt =dlmFilter(zt,mod3)
Rt <- with(ztflt, dlmSvd2var(U.R, D.R))
Ct <- with(ztflt, dlmSvd2var(U.C, D.C))
diag(Ct[[754]])
tester = matrix(c(x1[1:751],x2[1:751],x3[1:751]),ncol=3)
tester = tester*(ztflt$m[-c(1,751,750,749),])
test = tester[,1]+tester[,2]+tester[,3]
mod3s = dlmModPoly(1)
smth=dlmSmooth(test,mod3s)
autoplot(as.ts(smth$s))
autoplot(as.ts(test-x0[c(1:751),]))
residuals(ztfilt)$sd
residuals(ztflt)$sd
residuals(ztflt)$sd
ztflt =dlmFilter(zt,mod3)
Ct <- with(ztflt, dlmSvd2var(U.C, D.C))
mod3=dlmModReg(matrix(c(x1[1:751],x2[1:751],x3[1:751]),ncol=3),addInt = FALSE,C0=20*diag(1,3,3),dV=6.123e-05)
ztflt =dlmFilter(zt,mod3)
Ct <- with(ztflt, dlmSvd2var(U.C, D.C))
diag(Ct[[754]])
residuals(ztflt)$sd
residuals(ztflt)
residuals(voltFilt) # variance of \sigma_e 1.618034
www3<-"https://www.mimuw.edu.pl/~noble/courses/TimeSeries/data/m-ppiaco4709.txt"
PPI<-read.table(www3,header=F)
colnames(PPI) = c('Year','Month','Day','ppi')
zt = diff(log(PPI$ppi))
zt=zt-mean(zt)
arma = arima(zt,order=c(3,0,0))
summary(arma)
x0=data.frame(zt)
x1=zt[-1]
x2=x1[-1]
x3=x2[-1]
mod3=dlmModReg(matrix(c(x1[1:751],x2[1:751],x3[1:751]),ncol=3),addInt = FALSE,C0=20*diag(1,3,3),dV=6.123e-05)
ztflt =dlmFilter(zt,mod3)
Ct <- with(ztflt, dlmSvd2var(U.C, D.C))
diag(Ct[[754]])
residuals(ztflt)
ztflt
residuals(ztflt)
mod3=dlmModReg(matrix(c(x1[1:751],x2[1:751],x3[1:751]),ncol=3),addInt = FALSE,C0=20*diag(1,3,3),dV=0.00006)
ztflt =dlmFilter(zt,mod3)
Ct <- with(ztflt, dlmSvd2var(U.C, D.C))
diag(Ct[[754]])
residuals(ztflt)
6.123e-05
mod3=dlmModReg(matrix(c(x1[1:751],x2[1:751],x3[1:751]),ncol=3),addInt = FALSE,C0=20*diag(1,3,3),dV=6.123e-05)
ztflt =dlmFilter(zt,mod3)
Ct <- with(ztflt, dlmSvd2var(U.C, D.C))
diag(Ct[[754]])
residuals(ztflt)
diag(Ct[[754]])
autoplot(as.ts(test-x0[c(1:751),]))
mod2= dlmModReg(SP500$sp500,C0 = c(1,1) * diag(nrow = 2))
spfilt = dlmFilter(SP500$Pfizer,mod2)
as.ts(spfilt$m)%>%autoplot()
tester = cbind(1,SP500$sp500)
tester = tester*(spfilt$m[-1,])
test = tester[,1]+tester[,2]
autoplot(as.ts(cbind(test,SP500$Pfizer)), facets=FALSE)
Rt <- with(spfilt, dlmSvd2var(U.R, D.R))
diag(Rt[[169]]) # variances of states
diag(Rt[[150]]) # variances of states
autoplot(as.ts(cbind(test,SP500$Pfizer)), facets=FALSE)
summary(fixed)
mod2= dlmModReg(SP500$sp500,C0 = c(1,1) * diag(nrow = 2),dV=0.03795)
spfilt = dlmFilter(SP500$Pfizer,mod2)
as.ts(spfilt$m)%>%autoplot()
tester = cbind(1,SP500$sp500)
tester = tester*(spfilt$m[-1,])
test = tester[,1]+tester[,2]
autoplot(as.ts(cbind(test,SP500$Pfizer)), facets=FALSE)
Rt <- with(spfilt, dlmSvd2var(U.R, D.R))
diag(Rt[[150]]) # variances of innovations
residuals(spfilt)$sd[150] #variance \sigma-e = 1.003229
spSMT = dlmSmooth(spfilt$m,dlmModPoly(2))
autoplot(as.ts(drop(spSMT$s)), facets = FALSE)
autoplot(as.ts(smth$s))
auto.arima(linmodel$residuals,max.p = 10)
www4<-"https://www.mimuw.edu.pl/~noble/courses/TimeSeries/data/d-ibm3dxwkdays8008.txt"
ibm<-read.table(www4,header=T)
y = ibm$ew
x=ibm[,c(12,11,10,9,8)]
linmodel = lm(ew~M+`T`+W+R+1, data=ibm)
summary(linmodel)
checkresiduals(linmodel)
auto.arima(linmodel$residuals,max.p = 10)
checkresiduals(linmodel)
summary(linmodel)
knitr::opts_chunk$set(echo = TRUE)
library(dlm)
library(ggplot2)
library(ggfortify)
library(nnet)
library(forecast)
www5<-"https://www.mimuw.edu.pl/~noble/courses/TimeSeries/data/m-ge2608.txt"
ge<-read.table(www5,header=T)
ge = ge[,2]
# len ge = 927
data = cbind(ge[c(-996,-965,-994)],ge[c(-1,-996,-995)],ge[c(-1,-2,-996)],ge[c(-1,-2,-3)])
colnames(data) = c("t","t-1","t-2","t-3")
model = nnet(t~.,data=data, size =2, linout=TRUE)
summary(model)
pred = predict(model, data[,-1], type='raw')
accuracy(as.vector(pred),as.vector(data[,1]))
www5<-"https://www.mimuw.edu.pl/~noble/courses/TimeSeries/data/m-ge2608.txt"
ge<-read.table(www5,header=T)
ge = ge[,2]
# len ge = 927
data = cbind(ge[c(-996,-965,-994)],ge[c(-1,-996,-995)],ge[c(-1,-2,-996)],ge[c(-1,-2,-3)])
colnames(data) = c("t","t-1","t-2","t-3")
model = nnet(t~.,data=data, size =2, linout=TRUE)
summary(model)
pred = predict(model, data[,-1], type='raw')
accuracy(as.vector(pred),as.vector(data[,1]))
```{r network 2}
data =cbind(data, ifelse(data[,2]>0,1,0),ifelse(data[,3]>0,1,0),ifelse(data[,4]>0,1,0) )
colnames(data) = c("t","t-1","t-2","t-3","st-1","st-2","st-3")
model2 = nnet(t~.,data=data, size =5, linout=TRUE)
summary(model2)
pred2 = predict(model2, data[,-1], type='raw')
accuracy(as.vector(pred2),as.vector(data[,1]))
smth$s
# Chain X->Z->Y
library(dplyr)
setwd(getwd())
source("functions.R")
setwd(getwd())
source("functions.R")
setwd("C:/Users/Jacek/Desktop/Markov_symulations")
